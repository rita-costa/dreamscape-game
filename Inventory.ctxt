#BlueJ class context
comment0.target=Inventory
comment0.text=\r\n\ This\ class\ is\ part\ of\ the\ "Dreamscape"\ application.\ \r\n\ "Dreamscape"\ is\ a\ simple\ text\ based\ adventure\ game.\ \ \r\n\ \r\n\ An\ "Inventory"\ represents\ the\ current\ player's\ inventory\ in\ the\ game\ -\ it\ conatins\ the\ items\ that\ they\r\n\ are\ currently\ holding.\r\n\ \r\n\ This\ class\ conatins\ methods\ for\ commands\ dealing\ with\ picking\ up\ or\ dropping\ items\ in\ rooms\ and\ the\ \r\n\ exchanges\ of\ items\ during\ the\ game.\ \r\n\ It\ does\ this\ mainly\ by\ manipulating\ a\ HashMap\ that\ contains\ the\ items\ the\ player\ is\ currently\ holding.\r\n\ \r\n\ @author\ Rita\ Costa\ (k19005287)\r\n\ @2019.11.23\r\n
comment1.params=maxWeight
comment1.target=Inventory(int)
comment1.text=\r\n\ Creates\ a\ new\ inventory\ with\ a\ specified\ maximum\ weight\ limit.\r\n
comment10.params=itemName\ currentRoom
comment10.target=java.lang.String\ dropItem(java.lang.String,\ Room)
comment10.text=\r\n\ Used\ to\ remove\ items\ from\ player's\ inventory\ if\ 'drop'\ command\ used.\r\n\ Updates\ inventory\ weight\ and\ adds\ the\ item\ to\ the\ current\ room\ (so\ it\ can\ be\ picked\ up\ later\ if\ needed)\r\n\ \r\n\ @param\ Name\ of\ item\ player\ wants\ to\ drop\ and\ player's\ current\ room.\r\n
comment11.params=itemName
comment11.target=java.lang.String\ giveItem(java.lang.String)
comment11.text=\r\n\ Used\ to\ remove\ items\ from\ player's\ inventory\ if\ 'give'\ command\ used.\r\n\ Item\ removed\ from\ inventory\ BUT\ unlike\ dropItem,\ it\ is\ not\ added\ to\ the\ current\ room.\r\n\ \r\n\ @param\ Name\ of\ item\ player\ wants\ to\ give.\r\n
comment12.params=targetItem
comment12.target=void\ removeInventoryItem(Item)
comment12.text=\r\n\ Removes\ item\ from\ inventory\ by\ removing\ it\ from\ inventory\ HashMap\ and\r\n\ subtracting\ the\ weight\ of\ item\ from\ the\ weight\ being\ carried.\r\n
comment13.params=targetItem
comment13.target=void\ addInventoryItem(Item)
comment13.text=\r\n\ Adds\ item\ to\ inventory\ by\ adding\ it\ to\ inventory\ HashMap\ and\r\n\ adding\ it's\ weight\ to\ weight\ being\ carried.\r\n
comment14.params=itemName\ player
comment14.target=java.lang.String\ eatItem(java.lang.String,\ Player)
comment14.text=\r\n\ For\ a\ player\ to\ 'eat'\ an\ item.\r\n\ Checks\ if\ item\ exists\ in\ inventory\ and\ is\ edible.\r\n\ If\ item\ is\ edible,\ it\ is\ removed\ from\ the\ inventory\ and\ a\ sucess\ message\ returned.\r\n\ \r\n\ @param\ Name\ of\ item\ player\ wants\ to\ eat.\r\n
comment15.params=item
comment15.target=boolean\ containsItem(Item)
comment15.text=\r\n\ Checks\ if\ item\ in\ parameter\ is\ present\ in\ inventory\ HashMap.\ Returns\ true\ if\ it\ is.\r\n
comment16.params=itemName
comment16.target=boolean\ hasItemString(java.lang.String)
comment16.text=\r\n\ Checks\ if\ the\ item\ belonging\ to\ the\ itemName\ in\ the\ parameter\ is\ present\ in\ inventory\ HashMap.\r\n\ Returns\ true\ if\ present.\r\n\ \r\n\ Different\ from\ containsItem()\ because\ used\ outside\ Inventory\ class\ and\ searches\ for\ an\ item\ based\ on\ \r\n\ it's\ command\ name\ (String)\ instead\ of\ the\ item\ object\ itself.\r\n
comment17.params=targetGoalCount\ goals
comment17.target=boolean\ hasAllGoals(int,\ java.util.ArrayList)
comment17.text=\r\n\ Checks\ if\ inventory\ contains\ all\ the\ 'goal'\ items\ needed\ to\ wake\ up\ \r\n
comment2.params=itemName
comment2.target=Item\ getInventoryItem(java.lang.String)
comment2.text=\r\n\ Returns\ a\ specific\ item\ from\ the\ inventory.\r\n\ @parameter\ Name\ of\ item\r\n\ @return\ The\ item\ object.\r\n
comment3.params=itemName\ currentRoom
comment3.target=java.lang.String\ pickUpItem(java.lang.String,\ Room)
comment3.text=\r\n\ Used\ to\ add\ items\ to\ player's\ inventory\ if\ 'take'\ caommand\ used.\r\n\ First\ checks\ if\ the\ player\ can\ still\ carry\ the\ item\ (due\ to\ weight\ limitations).\r\n\ \r\n\ @param\ Name\ of\ item\ player\ wants\ to\ carry.\r\n
comment4.params=targetItem
comment4.target=java.lang.String\ getFailedTake(Item)
comment4.text=\r\n\ Returns\ a\ String\ describing\ why\ an\ item\ cannot\ be\ picked\ up\r\n\ depending\ on\ why\ it\ cannot\ be\ added\ to\ the\ inventory.\r\n\ \r\n\ @param\ Item\ to\ be\ added\ to\ inventory.\r\n
comment5.params=newItem
comment5.target=boolean\ canCarryWeight(Item)
comment5.text=\r\n\ Checks\ if\ item\ that\ player\ wants\ to\ add\ to\ inventory\ can\ be\ added\r\n\ Checks\ if\ it\ isn't\ too\ heavy,\ considering\ current\ inventory\ weight\ \r\n\ and\ the\ weight\ of\ the\ new\ item\ compared\ to\ the\ weight\ limit.\r\n\ \r\n\ @param\ Item\ player\ wants\ to\ carry.\r\n
comment6.params=targetItem
comment6.target=java.lang.String\ recieveReward(Item)
comment6.text=\r\n\ Used\ when\ a\ character\ gives\ an\ item\ to\ player\ as\ a\ reward.\ \r\n\ Item\ added\ to\ inventory\ if\ possible\ and\ a\ String\ describing\ the\ result\ is\ returned.\r\n\ \r\n\ @param\ Item\ character\ gifts\ player.\r\n\ @return\ String\ of\ result\ of\ action\ (either\ an\ error\ message\ or\ a\ confirmation\ message).\r\n
comment7.params=item
comment7.target=boolean\ hasRecieved(Item)
comment7.text=\r\n\ Checks\ if\ a\ gifted\ item\ was\ recieved\ by\ checking\ if\ the\ item\ is\ present\ in\ inventory.\r\n\ Returns\ true\ if\ present,\ meaning\ action\ was\ successful.\r\n\ \r\n\ @param\ Item\ to\ be\ recieved.\r\n
comment8.params=action\ item
comment8.target=java.lang.String\ inventoryConfirmationMessage(java.lang.String,\ Item)
comment8.text=\r\n\ Returns\ message\ with\ current\ inventory\ weight\ after\ an\ action\ has\ been\ sucessfuly\ performed\ on\ it.\r\n
comment9.params=
comment9.target=java.lang.String\ getInventoryString()
comment9.text=\r\n\ Returns\ String\ with\ a\ list\ of\ all\ items\ in\ inventory\ and\ their\ weights\ to\ be\ printed\r\n\ when\ player\ uses\ 'inventory'\ command.\r\n\ \r\n\ Presented\ as\:\ "INVENTORY\:\ -\ a\ key\ //\ Weight\ \=\ 1"\r\n
numComments=18
