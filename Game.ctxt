#BlueJ class context
comment0.target=Game
comment0.text=\r\n\ \ This\ class\ is\ the\ main\ class\ of\ the\ "Dreamscape"\ application.\ \r\n\ \ "Dreamscape"\ is\ a\ very\ simple,\ text\ based\ adventure\ game.\r\n\ \r\n\ \ To\ play\ this\ game,\ create\ an\ instance\ of\ this\ class\ and\ call\ the\ "play"\r\n\ \ method.\r\n\ \r\n\ \ This\ main\ class\ creates\ and\ initialises\ all\ the\ others\:\ it\ \r\n\ \ creates\ the\ parser,\ loads\ the\ map,\ creates\ a\ player,\ and\ starts\ the\ game.\ \ \r\n\ \ It\ also\ evaluates\ and\ executes\ the\ commands\ that\ the\ parser\ returns.\r\n\ \r\n\ @author\ \ Michael\ K\u00F6lling\ and\ David\ J.\ Barnes\ and\ Rita\ Costa\ (k19005287)\r\n\ @version\ 2019.11.12\r\n
comment1.params=
comment1.target=Game()
comment1.text=\r\n\ Create\ the\ game\ and\ initialise\ its\ internal\ map.\r\n
comment10.params=command
comment10.target=boolean\ quit(Command)
comment10.text=\ \r\n\ "Quit"\ was\ entered.\ Check\ the\ rest\ of\ the\ command\ to\ see\r\n\ whether\ we\ really\ quit\ the\ game.\r\n\ @return\ true,\ if\ this\ command\ quits\ the\ game,\ false\ otherwise.\r\n
comment11.params=
comment11.target=void\ goBack()
comment11.text=\ \r\n\ "Back"\ was\ entered.\ The\ rest\ of\ the\ command\ is\ ignored.\r\n\ Checks\ if\ the\ roomHistory\ (stack\ with\ all\ previously\ visited\ rooms)\ is\ empty.\r\n\ If\ not\ the\ player\ moves\ into\ the\ previous\ room\ they\ were\ in.\r\n\ \r\n\ Can\ be\ used\ until\ player\ reaches\ original\ start\ location\ (ie\ stack\ empty).\r\n
comment12.params=command
comment12.target=void\ takeItem(Command)
comment12.text=\ \r\n\ "Take"\ was\ entered.\ \r\n\ Try\ to\ find\ the\ target\ item.\ If\ not\ found\ an\ error\ message\ is\ printed.\r\n\ If\ item\ exists\ player\ attempts\ to\ add\ it\ to\ inventory\ by\ checking\ if\ it\ isn't\ immovable.\ \r\n
comment13.params=command
comment13.target=void\ dropItem(Command)
comment13.text=\ \r\n\ "Drop"\ was\ entered.\ \r\n\ Try\ to\ find\ the\ target\ item.\ If\ not\ found\ an\ error\ message\ is\ printed.\r\n\ If\ item\ exists\ player\ attempts\ to\ remove\ it\ from\ inventory\ by\ checking\ if\ it\ was\r\n\ present\ in\ inventory\ in\ the\ first\ place.\ \r\n
comment14.params=command
comment14.target=void\ goRoom(Command)
comment14.text=\ \r\n\ "Go"\ was\ entered.\r\n\ Try\ to\ go\ in\ to\ one\ direction.\ If\ there\ is\ an\ exit,\ enter\ the\ new\r\n\ room,\ otherwise\ print\ an\ error\ message.\r\n\ If\ room\ is\ teleportation\ room,\ player\ sent\ to\ a\ random\ room.\r\n
comment15.params=nextRoom
comment15.target=void\ moveTo(Room)
comment15.text=\ \r\n\ Used\ in\ goRoom\ method.\r\n\ Change's\ players\ current\ room,\ adds\ last\ room\ to\ history,\ and\ moves\ characters.\r\n
comment16.params=
comment16.target=void\ playerStrengthCheck()
comment16.text=\ \r\n\ Checks\ if\ player's\ strength\ is\ 0\ or\ higher.\ If\ not,\ player\ starves\ and\ \r\n\ loses\ the\ game\ (main\ while\ loop\ broken);\r\n
comment17.params=
comment17.target=void\ moveCharacters()
comment17.text=\ \r\n\ Used\ in\ goRoom\ method.\r\n\ Iterates\ through\ all\ characters\ in\ game\ and\ changes\ their\ current\ location\ changed\ to\ a\ random\ neighbouring\ room.\r\n
comment18.params=
comment18.target=void\ look()
comment18.text=\ \r\n\ "look"\ was\ entered.\ The\ rest\ of\ the\ command\ is\ ignored.\r\n\ Room\ description\ is\ re-printed.\r\n\ Command\ useful\ if\ inital\ description\ has\ scrolled\ out\ of\ view.\r\n
comment19.params=
comment19.target=void\ showInventory()
comment19.text=\ \r\n\ "inventory"\ was\ entered.\ The\ rest\ of\ the\ command\ is\ ignored.\r\n\ A\ list\ of\ all\ the\ player's\ inventory\ items\ and\ their\ weights\ printed.\r\n
comment2.params=
comment2.target=void\ play()
comment2.text=\r\n\ \ Main\ play\ routine.\ \ Loops\ until\ end\ of\ play.\r\n
comment20.params=command
comment20.target=void\ eat(Command)
comment20.text=\ \r\n\ "eat"\ was\ entered.\ \r\n\ Try\ to\ find\ the\ target\ item.\ If\ not\ found\ an\ error\ message\ is\ printed.\r\n\ \r\n\ Checks\ if\ existing\ item\ is\ edible,\ and\ prints\ appropriate\ message.\r\n
comment21.params=command
comment21.target=void\ wakeUp(Command)
comment21.text=\ \r\n\ "wake"\ was\ entered.\ \r\n\ Checks\ if\ "wake\ up"\ was\ typed.\ \r\n\ If\ player\ has\ all\ the\ goal\ items\ and\ is\ in\ correct\ end\ room,\ player\ wins\ (won\ boolean\ set\ to\ true),\ ending\ the\ game\r\n
comment22.params=command
comment22.target=void\ talkTo(Command)
comment22.text=\ \r\n\ "talk"\ was\ entered.\ \r\n\ Tries\ to\ talk\ to\ the\ character\ specified,\ if\ this\ exists,\ if\ not\ an\ error\ message\ printed.\r\n
comment23.params=command
comment23.target=void\ giveItem(Command)
comment23.text=\ \r\n\ "give"\ was\ entered.\r\n\ The\ command\ word\ order\ is\ expected\ to\ be\:\ "give\ [item\ in\ inventory]\ [character\ to\ give\ it\ to]"\r\n\ Tries\ to\ give\ a\ character\ an\ item\ from\ player's\ inventory.\r\n\ \r\n\ Once\ an\ item\ is\ given\ it\ cannot\ be\ taken\ back.\r\n
comment24.params=command
comment24.target=void\ useItem(Command)
comment24.text=\ \r\n\ "use"\ was\ entered.\r\n\ The\ command\ word\ order\ is\ expected\ to\ be\:\ "use\ [item\ in\ inventory]"\ OR\ "use\ [item\ in\ inventory]\ [item\ in\ room\ to\ use\ with]"\r\n\ Depending\ on\ the\ number\ of\ words\ in\ the\ command,\ try\ to\ use\ the\ item(s)\ and\ print\ \r\n\ result\ returned.\r\n
comment25.params=
comment25.target=void\ waitCommand()
comment25.text=\ \r\n\ "wait"\ was\ entered.\r\n\ Characters\ move\ but\ player\ doesn't.\ The\ room\ description\ is\ re-printed.\r\n\ \r\n\ NOTE\:\ moveTo(player.getCurrentRoom())\ method\ could\ have\ been\ used\ BUT\ this\ would\ cause\ player's\ \r\n\ strength\ to\ deplete,\ making\ game\ very\ hard\ to\ win.\r\n
comment3.params=
comment3.target=void\ printWelcome()
comment3.text=\r\n\ Print\ out\ the\ opening\ message\ for\ the\ player.\r\n
comment4.params=
comment4.target=void\ printWin()
comment4.text=\r\n\ Print\ out\ the\ end\ message\ to\ player\ if\ they\ win\ the\ game.\r\n
comment5.params=
comment5.target=void\ printLose()
comment5.text=\r\n\ Print\ out\ the\ end\ message\ to\ player\ if\ they\ lose\ the\ game.\r\n
comment6.params=characterList
comment6.target=void\ loadCharacters(java.util.ArrayList)
comment6.text=\r\n\ Loads\ characters\ by\ saving\ their\ name\ (used\ in\ commands)\ and\ their\ Character\ object\ to\ a\ HashMap.\r\n\ Used\ to\ call\ character's\ methods\ to\ move\ and\ interact\ with\ player.\r\n\ \r\n\ @param\ List\ of\ characters\ returned\ from\ 'getAllCharacters'\ method\ in\ map\ (where\ characters\ are\ initailised).\r\n
comment7.params=
comment7.target=void\ printRoomDescription()
comment7.text=\r\n\ Print\ out\ the\ description\ of\ room\ player\ is\ currently\ in,\ including\:\r\n\ room\ description,\ items\ in\ room,\ characters\ in\ room,\ exit\ information,\ player's\ strength\ bar.\r\n
comment8.params=command
comment8.target=boolean\ processCommand(Command)
comment8.text=\r\n\ Given\ a\ command,\ process\ (that\ is\:\ execute)\ the\ command.\r\n\ @param\ command\ The\ command\ to\ be\ processed.\r\n\ @return\ true\ If\ the\ command\ ends\ the\ game,\ false\ otherwise.\r\n
comment9.params=
comment9.target=void\ printHelp()
comment9.text=\r\n\ Print\ out\ some\ help\ information.\r\n\ Here\ we\ print\ some\ stupid,\ cryptic\ message\ and\ a\ list\ of\ the\ \r\n\ command\ words.\r\n
numComments=26
